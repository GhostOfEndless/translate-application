services:
  db:
    image: postgres:16.3
    container_name: $DB_CONTAINER_NAME
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_DB: $POSTGRES_DB
    healthcheck:
      test:
        - "CMD-SHELL"
        - "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"
      interval: 3s
      timeout: 5s
      retries: 10

  app:
    build: .
    container_name: $APP_CONTAINER_NAME
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${APP_PORT}:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_PASSWORD: $POSTGRES_PASSWORD
      DB_USER: $POSTGRES_USER
      DB_NAME: $POSTGRES_DB
      DB_HOST: $DB_CONTAINER_NAME
      DB_PORT: $DB_PORT
      YANDEX_CLOUD_API_KEY: $YANDEX_CLOUD_API_KEY
      YANDEX_CLOUD_API_ENDPOINT: $YANDEX_CLOUD_API_ENDPOINT
      YANDEX_CLOUD_REQUESTS_LIMIT: $YANDEX_CLOUD_REQUESTS_LIMIT
      YANDEX_CLOUD_SYMBOLS_LIMIT: $YANDEX_CLOUD_SYMBOLS_LIMIT
      TRANSLATION_SERVICE_THREADS: $TRANSLATION_SERVICE_THREADS
